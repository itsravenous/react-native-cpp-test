//
// Created by Marius Reimer on 2019-08-10.
//

#include <iostream>
#include <jni.h>
#include <android/log.h>
#include "example.h"
#include "fingerprint.hpp"

using namespace std;

extern "C" {
    JNIEXPORT jlong JNICALL
    Java_com_mariusreimer_rncppcode_RNCPPCodeModule_multiply(JNIEnv *env, jclass type, jlong a, jlong b) {
        return example::multiply(a, b);
    }

    JNIEXPORT jdouble JNICALL
    Java_com_mariusreimer_rncppcode_RNCPPCodeModule_matchFingerPrint(JNIEnv *env, jclass type, jdoubleArray refs, jdoubleArray points) {
        jclass jcClass = env->GetObjectClass(refs);

        jboolean refsIsCopy;
        jdouble* refDoubles = env -> GetDoubleArrayElements(refs, &refsIsCopy);

        jboolean pointsIsCopy;
        jdouble* pointDoubles = env -> GetDoubleArrayElements(points, &pointsIsCopy);
        jint numPoints = env -> GetArrayLength(points);

        FingerPrint *f = new FingerPrint(refDoubles, pointDoubles, numPoints / 8);

        // Free memory if necessary
        if (refsIsCopy == JNI_TRUE) {
            env -> ReleaseDoubleArrayElements(refs, refDoubles, JNI_ABORT);
        }
        if (pointsIsCopy == JNI_TRUE) {
            env -> ReleaseDoubleArrayElements(points, pointDoubles, JNI_ABORT);
        }

        return f->getScore();


//        jfieldID aId = env->GetFieldID(jcClass, "refs", "[D");
//        jobject mvdata = env->GetObjectField (existingFingerPrint, aId);
//        jdoubleArray * arr = reinterpret_cast<jdoubleArray*>(&mvdata);
//
//        // Get the elements (you probably have to fetch the length of the array as well
//        double * data = env->GetDoubleArrayElements(*arr, NULL);
//
//        // Don't forget to release it
//        env->ReleaseDoubleArrayElements(*arr, data, 0);

    //    double refs[] = { 0.0, 0.0, 100.0, 100.0, 0.0, 100.0 };
    //     double spots[] = {
    //         10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0,
    //         20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0,
    //         30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0,
    //         40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0
    //     };
    //     double refs2[] = { 0.0, 0.0, 100.0, 100.0, 0.0, 100.0 };
    //     double spots2[] = {
    //         15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0,
    //         20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0,
    //         37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0,
    //         40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0
    //     };
    //     int count = 4; 
    //     FingerPrint *f = new FingerPrint(refs, spots, count);
    //     return f->getScore();
//        return 9.3;
        // return "Hi there";
    }

}